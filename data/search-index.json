[
    {
        "title": "Overview - Claimorous! Wiki",
        "url": "https://surfingblockhead.github.io/claimorous-wiki/index.html",
        "content": "Claimorous! - Advanced Land Protection Mod Overview Claimorous! is a powerful and highly customizable land protection mod for Minecraft servers running on the Fabric mod loader. It allows players to create protected areas (claims) where their builds and belongings are secured from unwanted interference. With an intuitive in-game interface and fully configurable settings, Claimorous! offers a flexible claim system suitable for any multiplayer environment. Server administrators have extensive control over the entire system through detailed configuration options, making it an excellent tool for customizing gameplay within modpacks. Designed to perform efficiently on high-population or high-density servers, Claimorous! ensures both reliability and scalability. We want you! If you are a server admin and want to discuss features or a player who wants to join the mod test server, Join Us on Discord Join our Discord Key Features Tiered Claim System: Three tiers of claims with customizable sizes Comprehensive Protection: Control block breaking/placement, entity interaction, PvP, and more Permission System: Fine-grained control on what other players can do within your claim Claim Transfer: A contract-like item to transfer claim ownership Visual Indicators: Customizable claim borders with particle effects Essence System: Optional upkeep system for claims requiring \"essence\" as a resource Admin Claims: Special administrator-controlled claims with unique settings Detailed Configuration: Extensive options for server owners to tailor the system to their needs And much more: Explosion, pistons, fluids, projectile, and many more option can be configured! Getting Started Creating a Claim Craft a Claim Anchor (the primary block used to define and manage a claim) Place the Claim Anchor where you want the center of your claim to be The claim will extend in all directions from the anchor according to the tier settings Claim Management Craft the Claim Monocle item and hold it in your off hand to visualize claim boundaries Interact with your Claim Anchor to manage permissions, upgrade tiers and manage claim essence (if enabled) Note Claimorous! was designed with an emphasis on extremely granular configuration, allowing any restriction to be managed through a powerful and flexible configuration system. Your imagination is the limit! While Player Claims follow global server rules and rely on the Claim Anchor, Admin Claims are created and managed through commands (if OP) and they follow specific rules that can be defined by creating custom admin claim types. It's not recommended to change config manually, instead player claim config menu can be accessed in game by running /claimorous config, while for admin claim use /claimorous admin config <type>."
    },
    {
        "title": "Global Claim Settings - Claimorous! Wiki",
        "url": "https://surfingblockhead.github.io/claimorous-wiki/views/player-claims/global-settings.html",
        "content": "Global Claim Settings These settings control the general behavior of player claims across your server. Important Note Be careful! Changing claim size won't affect previously placed claims, these settings only apply to newly created claims. Configuration Options The following options can be changed in-game using the /claimorous config command to open the config GUI or by editing the configuration file directly (not recommended). # [Global Claim Configuration] # Tier 0 claim size (side of the cube) tier0_claim_size = 7 # Tier 1 claim size (side of the cube) tier1_claim_size = 11 # Tier 2 claim size (side of the cube) tier2_claim_size = 15 # Minimum height for claims min_claim_height = -64 # Maximum height for claims max_claim_height = 319 # Minimum permission level to bypass claim protection min_permission_level_to_bypass = 2 # Maximum claims per player max_claims_per_player = 3 # Minimum distance between claims min_distance_between_claims = 16 # Enable owners to share permissions (Block_Breaking, Item_Use, Entity_Interact) with other players enable_permission_system = true # Allow owners to share permissions management with other players allow_permission_management_sharing = false Claim Tiers Claimorous! features three tiers of claims, each with different sizes: Tier Size (Cube Side Length) Description Tier 0 7 blocks Basic claim, suitable for small builds or starter bases Tier 1 11 blocks Medium-sized claim, good for established bases Tier 2 15 blocks Large claim, ideal for complex builds or community areas Technical Note Claim sizes must be odd numbers because the Claim Anchor is placed at the center of the claim. This ensures that the protected area extends equally in all directions from the anchor. Placement Limits Claims can only be placed within specific height limits: Minimum Height: -64 (or the world's minimum height) Maximum Height: 319 (or the world's maximum height) These limits ensure that claims can be placed throughout the entire vertical range of the Minecraft world. Claim Restrictions To maintain balance and prevent claim spam, the following restrictions apply: Maximum Claims per Player: By default, each player can own up to 3 claims Minimum Distance Between Claims: Claims from different players must be at least 16 blocks apart Bypass Permissions Server operators (or players with the appropriate permission level) can bypass claim restrictions. By default, this requires a permission level of 2 (OP status). Warning Allowing non-OP players to bypass claim restrictions can lead to grief and abuse. Only change this setting if you have a trusted staff team with clear guidelines."
    },

    {
        "title": "Protection - Claimorous! Wiki",
        "url": "https://surfingblockhead.github.io/claimorous-wiki/views/player-claims/protection.html",
        "content": "Protection Configure how your claims protect your builds and belongings from unwanted interference. Protection Overview Claims grant their owners a number of protective mechanics that can be activated individually. In addition to activating the protection policy, lists of IDs and Tags can be compiled to indicate exceptions to the rule. For example: by setting prevent_block_breaking to true and including the tag c:ores among the exceptions, ores can be broken by any player. On the other hand, by setting prevent_item_use to false and minecraft:bow as exception ID, only the owner of the claim will be able to shoot arrows. Example config: players cannot break blocks except grass, cannot place blocks except flowers, and cannot interact with blocks except doors and buttons. Block and Item Protection These settings control how blocks and items are protected within claims. # [Block and Item Protection Settings] # Control whether blocks can be broken within claims by non-owners prevent_block_breaking = true # Lists of block IDs/tags that are exceptions to the block breaking restriction prevent_block_breaking_exceptions_ids = [] prevent_block_breaking_exceptions_tags = [] # Control whether blocks can be placed within claims by non-owners prevent_block_placement = true prevent_block_placement_exceptions_ids = [] prevent_block_placement_exceptions_tags = [] # Control whether blocks can be interacted with within claims by non-owners prevent_block_interaction = true prevent_block_interaction_exceptions_ids = [] prevent_block_interaction_exceptions_tags = [] # Control whether items can be used (ex. eating food) within claims by non-owners prevent_item_use = true prevent_item_use_exceptions_ids = [] prevent_item_use_exceptions_tags = [] # Control whether items can be used on blocks (ex. hoe on dirt) within claims by non-owners prevent_item_use_on_block = true prevent_item_use_on_block_exceptions_ids = [] prevent_item_use_on_block_exceptions_tags = [] Please Note The examples below consider the cases where protection is enabled (the exceptions disable the restrictions). Anyway, it is possible to set protections to \"no\": in this case the exceptions enforce protections only on inserted IDs and tags. Block Breaking Protection When enabled, this prevents non-owners from breaking blocks within the claim. You can specify exceptions by block ID or tag. Common exception examples: minecraft:grass - Allow players to break grass c:ores - Allow players to mine any ore minecraft:crops - Allow players to harvest crops Block Placement Protection When enabled, this prevents non-owners from placing blocks within the claim. You can specify exceptions by block ID or tag. Common exception examples: minecraft:torch - Allow players to place torches c:flowers - Allow players to place flowers Block Interaction Protection When enabled, this prevents non-owners from interacting with blocks (like opening doors, chests, etc.) within the claim. You can specify exceptions by block ID or tag. Common exception examples: minecraft:crafting_table - Allow players to use crafting tables minecraft:doors - Allow players to open/close doors minecraft:buttons - Allow players to press buttons Item Use Protection When enabled, this prevents non-owners from using items (like eating food, drinking potions) within the claim. You can specify exceptions by item ID or tag. Item Use on Block Protection When enabled, this prevents non-owners from using items on blocks (like using a hoe on dirt) within the claim. You can specify exceptions by item ID or tag. Entity Protection These settings control how entities are protected within claims. # [Entity Protection Settings] # Protect entities within claims from being attacked by non-owners protect_entity_from_attack = true # Lists of entity IDs/tags that are exceptions to damage protection protect_entity_from_attack_exceptions_ids = [] protect_entity_from_attack_exceptions_tags = [] # Protect entities within claims from being interacted with by non-owners protect_entity_from_interaction = true # Lists of entity IDs/tags that are exceptions to interaction protection protect_entity_from_interaction_exceptions_ids = [] protect_entity_from_interaction_exceptions_tags = [] # Protect claim owners from hostile mob attacks within their own claims protect_from_hostile_mob = true Entity Ownership The ownership of pets and mounts exceeds the ownership of the claim. This means the owner of a horse will be able to interact with it even in other people's claims. Entity Attack Protection When enabled, this prevents non-owners from attacking entities within the claim. You can specify exceptions by entity ID or tag. Entity Interaction Protection When enabled, this prevents non-owners from interacting with entities (like trading with villagers, shearing sheep) within the claim. You can specify exceptions by entity ID or tag. Hostile Mob Protection When enabled, this prevents hostile mobs from attacking claim owners within their own claims. This provides a safe haven for players within their own territory. PvP and Combat Protection These settings control combat-related protections within claims. # [PvP and Projectile Protection Settings] # Prevent PvP targeting of claim owners protect_owner_pvp = true # Prevent all PvP within claims (for everyone) protect_everyone_pvp = false # Prevent projectile damage within claims prevent_projectile_damage = true # Visual effects for blocked projectiles show_projectile_effects = true projectile_particle_scale = 1.0 projectile_particle_count = 16 projectile_effect_cooldown = 100 projectile_particle_density = 1.0 Projectile protection in action, showing visual effects when arrows are blocked. Owner PvP Protection When enabled, this prevents other players from engaging in PvP with the claim owner within their claim. Global PvP Protection When enabled, this prevents all PvP within the claim, regardless of who is involved. Projectile Protection When enabled, this prevents projectiles (arrows, tridents, etc.) from causing damage within the claim. You can also configure visual effects to display when projectiles are blocked. Environmental Protection These settings control how environmental factors interact with claims. # [Environmental Protection Settings] # Prevent fluids from flowing into claims from outside prevent_fluid_flow_into_claim = true # Distance from claims where fluid placement is prevented fluid_placement_protection_radius = 3 # Prevent fire from spreading across claim boundaries prevent_fire_spread_across_claim = true # Prevent explosions within claims prevent_explosion = true # Visual effects for blocked explosions show_explosion_effects = true explosion_particle_scale = 0.5 explosion_sound_volume = 50 explosion_effect_cooldown = 500 # Prevent pistons from pushing blocks across claim boundaries prevent_piston_interaction = true # Prevent dispensers from working across claim boundaries prevent_dispenser_interaction = true Explosion protection in action, showing visual effects when explosions are blocked. Fluid Protection When enabled, this prevents fluids (water, lava) from flowing into claims from outside. You can also set a protection radius to prevent fluid placement near claim boundaries. Fire Protection When enabled, this prevents fire from spreading across claim boundaries, protecting your builds from wildfires. Explosion Protection When enabled, this prevents explosions (TNT, creepers, etc.) from damaging blocks within claims. You can also configure visual effects to display when explosions are blocked. Pistons and Dispensers Protection These settings prevent pistons and dispensers from affecting blocks across claim boundaries, ensuring that redstone contraptions can't be used to bypass claim protection. Hoppers cannot be used to move items across claim boundaries (not configurable)."
        
    },

    {
        "title": "Essence System - Claimorous! Wiki",
        "url": "https://surfingblockhead.github.io/claimorous-wiki/views/player-claims/essence-system.html",
        "content": "Essence System A resource-based upkeep system for maintaining claims. Overview The Essence System introduces a maintenance cost for claims, requiring players to regularly add essence to keep their claims active. When enabled, claims start with a small amount of essence that depletes over time. If the essence runs out, the claim deactivates and no longer provides protection. Important Note The Essence System is optional and can be disabled by server administrators. When disabled, claims remain active indefinitely without requiring maintenance. How It Works Each claim consumes essence at regular intervals Players must add essence items to their claim anchor to maintain protection New claims receive an initial grace period, providing a configurable amount of essence The claim anchor has a maximum storage capacity for essence Adding Essence To add essence to a claim: Obtain the essence item (configurable, default: claimorous:claim_essence) Right-click on your claim anchor Place the essence item in the designated slot in the GUI Each essence item adds a configurable amount of essence to your claim's storage. Configuration Options Server administrators can customize the essence system through the following settings: # [Essence System Settings] # Enable or disable the essence system enable_essence_system = true # Interval in ticks between essence consumption (20 ticks = 1 second) essence_consumption_interval = 1200 # Amount of essence consumed per interval essence_consumption_amount = 1.0 # Initial grace period once claim anchor is placed in ticks initial_grace_period_ticks = 2400 # Maximum amount of essence that can be stored in a claim anchor max_essence_storage = 2000 # Amount of essence provided by each essence item essence_per_item = 20 # Item ID for the essence item essence_item_id = \"claimorous:claim_essence\" Tips for Players Keep a reserve of essence items for emergencies Check your claim's essence level regularly Consider the essence cost when planning multiple claims Tips for Administrators Balance the essence consumption rate with your server's economy Consider making essence craftable or obtainable through gameplay Adjust the initial grace period to give new players time to understand the system Use the essence system to prevent claim hoarding and abandoned claims"
    },
    {
        "title": "Permission System - Claimorous! Wiki",
        "url": "https://surfingblockhead.github.io/claimorous-wiki/views/player-claims/permission-system.html",
        "content": "Permission System Fine-grained control over what other players can do within your claim. Overview The Permission System allows claim owners to grant specific permissions to other players, giving them the ability to perform certain actions within the claim that would otherwise be restricted. This enables collaboration while maintaining security. Important Note The Permission System is enabled by default but can be disabled by server administrators. When disabled, only claim owners and server operators can interact with claims. Available Permissions Claim owners can grant the following permissions to other players: Permission Description Break Blocks Allows breaking blocks within the claim Place Blocks Allows placing blocks within the claim Interact with Blocks Allows interaction with blocks (e.g., chests, doors, buttons) Use Items Allows using items within the claim Interact with Entities Allows interaction with entities (e.g., villagers, animals) Attack Entities Allows attacking entities within the claim Manage Permissions Allows managing permissions for other players (if enabled by server) Managing Permissions To manage permissions for other players: Right-click on your claim anchor Navigate to the \"Permissions\" tab in the GUI Select a player from the list or add a new player Toggle the permissions you want to grant or revoke Save your changes Players with the \"Manage Permissions\" permission can grant or revoke permissions for other players, but they cannot grant the \"Manage Permissions\" permission itself to others. Configuration Options Server administrators can customize the permission system through the following settings (in the Global Claim Configuration section): # Enable/disable the permission system within claims enable_permission_system = true # Allow claim owners to share permission management with trusted players allow_permission_management_sharing = true Tips for Players Be cautious when granting the \"Manage Permissions\" permission Consider creating different permission sets for different types of collaborators Regularly review your permission settings, especially for inactive players For temporary access, grant only the specific permissions needed Tips for Administrators Consider whether to allow permission management sharing based on your server's trust model Inform players about the permission system to prevent accidental security issues"
        
    },
    {
        "title": "Claim Transfer - Claimorous! Wiki",
        "url": "https://surfingblockhead.github.io/claimorous-wiki/views/player-claims/claim-transfer.html",
        "content": "Claim Transfer Transfer ownership of your claims to other players. Overview The Claim Transfer system allows players to transfer ownership of their claims to other players using Claim Contracts. This feature is particularly useful for server communities where players may want to sell, gift, or transfer properties to friends or other community members. Claim Contracts work like legal documents that must be signed by the recipient before the transfer can be completed. How Claim Transfer Works The recipient player crafts a Claim Contract The recipient signs the contract using the item The claim owner uses the signed contract on their claim anchor The owner confirms the transfer in the dedicated screen Ownership is transferred to the recipient Important Note Claim transfers are permanent and cannot be undone. Make sure you trust the recipient before transferring your claim! Signing a Contract To sign a Claim Contract: Hold the Claim Contract in your main hand Right-click while holding the contract Confirm the signing in the dialog that appears Once signed, the contract will display your name and can be given to the current claim owner. Executing a Transfer To transfer a claim as the owner: Obtain a signed Claim Contract from the recipient Right-click on your claim anchor with the signed contract Review the transfer details in the confirmation screen Confirm the transfer After transferring a claim, you will no longer have any permissions within that claim unless the new owner grants them to you. Considerations for Claim Transfer Permissions: All permission settings are preserved during transfer, but the new owner can modify them Essence: If the essence system is enabled, the current essence level transfers with the claim Claim Count: The recipient must have available claim slots (not exceeding their maximum allowed claims) Tier Level: The claim tier remains unchanged during transfer"
        
    },
    {
        "title": "Visual Settings - Claimorous! Wiki",
        "url": "https://surfingblockhead.github.io/claimorous-wiki/views/player-claims/visual-settings.html",
        "content": "Visual Settings Customize the visual appearance of claim boundaries and effects. Overview Claimorous! provides visual indicators to help players identify claim boundaries and protection effects. These visual elements can be customized by server administrators to match server aesthetics or performance requirements. Players can see claim boundaries by using the Claim Monocle item, which shows particle borders around claims when held in the off-hand slot. Claim Border Visualization Claim borders are displayed as particle effects that outline the boundaries of claims. These visual indicators help players understand where protected areas begin and end. Border Configuration Options # Show particle borders around claims show_claim_borders = true # Maximum distance at which claim borders are visible claim_border_view_distance = 128 # Size of claim border particles claim_particle_scale = 2.0 # Update interval for claim border particles (in ticks) claim_particle_update_interval = 20 # Density of particles in claim borders claim_particle_density = 1.0 Claim Tier Colors Each claim tier has a distinct color to help players identify the tier level at a glance. These colors can be customized using hex color codes. # Colors for different claim tiers (in hex format) tier0_claim_color = \"#55FF55\" # Light green tier1_claim_color = \"#5555FF\" # Blue tier2_claim_color = \"#CC4444\" # Red Protection Effect Visualizations When protection features block certain actions, visual effects can be displayed to provide feedback to players. These effects can be customized or disabled (see PvP and Environmental Protection for more information). Projectile Protection Effects # Visual effects for blocked projectiles show_projectile_effects = true projectile_particle_scale = 1.0 projectile_particle_count = 16 projectile_effect_cooldown = 100 projectile_particle_density = 1.0 Explosion Protection Effects # Visual effects for blocked explosions show_explosion_effects = true explosion_particle_scale = 0.5 explosion_sound_volume = 50 explosion_effect_cooldown = 500 Performance Considerations Visual effects can impact server and client performance, especially on servers with many claims or players. Consider these tips for optimizing visual settings: Reduce particle density for better performance on busy servers Increase update intervals to reduce the frequency of particle generation Lower view distance to limit how far away players can see claim borders Disable effect visualizations if they're not necessary for your server Setting particle density or count too high can cause client-side lag, especially when many claims are visible simultaneously."
        
    },
    {
        "title": "Logging Settings - Claimorous! Wiki",
        "url": "https://surfingblockhead.github.io/claimorous-wiki/views/player-claims/logging-settings.html",
        "content": "Logging Settings Configure detailed logging for claim activities and events. Logging system is still in WIP Overview Claimorous! provides comprehensive logging options to help server administrators track claim-related activities and troubleshoot issues. These logs can be invaluable for monitoring player behavior, investigating griefing attempts, and maintaining server security. Logs are stored in the server's log files and can be accessed through standard server log viewing methods. Available Logging Options Server administrators can enable or disable logging for various claim-related events: # [Logging Settings] # Enable logging for claim creation log_claim_creation = true # Enable logging for claim removal log_claim_removal = true # Enable logging for claim modifications log_claim_modification = true # Enable logging for player warnings (attempted violations) log_player_warnings = true # Enable periodic statistics logging log_periodic_stats = false # Interval for periodic stats logging (in seconds) periodic_stats_interval = 3600 # Enable logging for configuration changes log_config_changes = true # Enable debug logging (verbose) log_debug_info = false Log Types Explained Claim Creation Logs When enabled, these logs record when and where players create new claims, including: Player name and UUID Claim location (coordinates) Claim tier Claim Removal Logs These logs track when claims are removed, whether by the owner or through other means: Player who removed the claim Original claim owner Claim location (coordinates) Reason for removal (if applicable) Claim Modification Logs These logs record changes to existing claims, such as: Permission changes Tier upgrades Essence additions Other configuration changes Player Warning Logs These logs record attempted violations of claim protections: Player attempting the action Type of action attempted (block breaking, entity interaction, etc.) Location of the attempt Claim owner Periodic Statistics Logs When enabled, these logs provide regular summaries of claim-related statistics: Total number of players with claims Average number of claims per player Configuration Change Logs These logs record changes to the Claimorous! configuration: Who made the change (player name or console) What setting was changed Old and new values Timestamp Debug Logs These are verbose logs that provide detailed information about the mod's operation: Internal processes and calculations Performance metrics Error traces and warnings Other technical details Debug logging can significantly increase log file size and may impact server performance. Only enable this option when troubleshooting specific issues."
        
    },
    {
        "title": "Admin Claim Commands - Claimorous! Wiki",
        "url": "https://surfingblockhead.github.io/claimorous-wiki/views/admin-claims/commands.html",
        "content": "Admin Claim Commands Commands for server operators to create and manage admin claims. Admin Claims Overview Admin claims can only be created by server operators using commands. They have their own configuration, separate from regular claims and can override global settings, including different values between length, height, and width. The protection rules in admin claims depend exclusively on which type they belong; each type follows its own rule and can be configured individually. Command Categories Admin claim commands are organized into the following categories: Create Commands Modification Commands Information Commands 1. Create Commands These commands are used to create new admin claims. Create Cubic Admin Claim /claimorous admin create <type> <anchor> <size> Creates a cubic admin claim with equal length, width, and height. Parameters: type: The claim type (from configured admin claim types) anchor: The center block position (x y z) size: The length of each side (1-29999999 blocks) Example: /claimorous admin create spawn ~ ~ ~ 50 This creates a cubic admin claim of type \"spawn\" centered at your current position with dimensions 50×50×50 blocks. Create Parallelepipedal Admin Claim /claimorous admin create <type> <anchor> <length> <height> <width> Creates an admin claim with custom dimensions. Parameters: type: The claim type anchor: The center block position length: X-axis dimension height: Y-axis dimension width: Z-axis dimension Example: /claimorous admin create pvparena ~ ~ ~ 100 30 100 This creates a parallelepipedal admin claim of type \"pvparena\" centered at your current position with dimensions 100×30×100 blocks (wide but not very tall). 2. Modification Commands These commands are used to modify existing admin claims. Remove Admin Claim /claimorous admin remove <anchor> Deletes an admin claim at the specified anchor position. Example: /claimorous admin remove 100 64 200 This removes the admin claim centered at coordinates 100, 64, 200. Change Claim Type /claimorous admin change <anchor> <new_type> Changes the type of an existing admin claim while maintaining all other claim properties. Example: /claimorous admin change 100 64 200 wilderness This changes the type of the admin claim at coordinates 100, 64, 200 to \"wilderness\". Relocate Claim Anchor /claimorous admin relocate <anchor> <new_anchor> Moves an admin claim to a new anchor position while preserving all claim dimensions and settings. Example: /claimorous admin relocate 100 64 200 150 64 250 This moves the admin claim from coordinates 100, 64, 200 to coordinates 150, 64, 250. Resize Commands Resize Cubic /claimorous admin resize <anchor> <size> Resizes claim to equal dimensions in all axes. Example: /claimorous admin resize 100 64 200 75 This resizes the admin claim at coordinates 100, 64, 200 to be 75×75×75 blocks. Resize Parallelepipedal /claimorous admin resize <anchor> <length> <height> <width> Resizes claim with custom dimensions for each axis. Example: /claimorous admin resize 100 64 200 120 40 120 This resizes the admin claim at coordinates 100, 64, 200 to be 120×40×120 blocks. 3. Information Commands These commands are used to get information about admin claims. List Admin Claims /claimorous admin list Displays all active admin claims on the server. Get Admin Claim Info /claimorous admin info <anchor> Shows detailed information about a specific admin claim. Example: /claimorous admin info 100 64 200 This displays information about the admin claim at coordinates 100, 64, 200. Open Config Screen /claimorous admin config <type> Opens the configuration GUI for the specified claim type. Example: /claimorous admin config spawn This opens the configuration GUI for the \"spawn\" claim type. Admin Claim Types Storage Admin claim types are stored in the path /config/claimorous_admin_claims/<type>.toml. Importing/exporting them to other Minecraft instances will allow sharing admin claim types!"
        
    },
    {
        "title": "Troubleshooting - Claimorous! Wiki",
        "url": "https://surfingblockhead.github.io/claimorous-wiki/views/troubleshooting.html",
        "content": "Troubleshooting Solutions for common issues and problems with Claimorous! Common Issues Claim Creation Fails Problem: You're unable to create a new claim with your Claim Anchor. Possible Causes: You've reached your maximum claim limit (default: 3 claims per player) You're trying to place a claim too close to another player's claim (default minimum distance: 16 blocks) You're trying to place the Claim Anchor outside the allowed height range The area is already claimed by another player or an admin claim Solutions: Check how many claims you already own using the Claim Monocle Move further away from existing claims Verify that you're within the allowed height range (default: -64 to 319) Use the Claim Monocle to check for existing claims in the area Protection Doesn't Work Problem: Your claim isn't protecting your builds or belongings as expected. Possible Causes: The specific protection type is disabled in the configuration The block or entity is listed as an exception in the configuration Your claim has run out of essence (if the essence system is enabled) The player has bypass permissions (OP status by default) You've granted specific permissions to the player Solutions: Check the configuration settings for the specific protection type Review the exception lists for the protection type Add more essence to your claim if needed Review the permissions you've granted to other players Visual Effects Not Appearing Problem: You can't see claim borders or other visual effects. Possible Causes: Particle effects are disabled in your game settings Visual effects are disabled in the mod configuration You're not holding the Claim Monocle in your off-hand You're too far from the claim (beyond the view distance setting) Solutions: Check your Minecraft particle settings (Options → Video Settings → Particles) Verify that visual effects are enabled in the mod configuration Make sure you're holding the Claim Monocle in your off-hand Move closer to the claim Config Validation The mod automatically validates configuration values on load to ensure they are within acceptable ranges. Invalid values will be adjusted to the nearest valid value. Warning It's not recommended to edit the configuration files manually. Instead, use the in-game configuration menus: For player claims: /claimorous config For admin claims: /claimorous admin config <type> Reporting Issues If you encounter bugs or compatibility issues, please report them on our Discord server with the following information: Detailed description of the issue Steps to reproduce the problem Your Minecraft version Fabric Loader version Claimorous! version List of other installed mods Server logs (if applicable) Not Just Claimorous! Enhanced Experience For an even more captivating experience, try Claimorous! along with 🔒 Lock'n'Pick mod."
        
    }
]

